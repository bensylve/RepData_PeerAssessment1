spam
install.packages(spam)
import spam
library(spam)
install.packages("spam")
spam
?spam
load(spam)
library(spam)
?spam
nz <- 128
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
View(spam)
st(spam[,1:5])
str(spam[,1:5])
set.seed(3445)
?set.seed
trainIndicator = rbinom(4601, size=1, prob=0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
spam[1,]
spam[2,]
spam[2,1]
spam[,1]
names(trainSpam)
head(trainSpam)
clear
clr
clc()
head(trainSpam)
names(trainSpam)
table(trainSpam$type)
table(trainSpam$credit)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve+1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam[,1:4 ]+1))
library(dplyr)
activityTable <- read.csv("activity.csv")
activityWithoutNulls <- activityTable[!is.na(activityTable$steps),]
activityTable <- read.csv("activity.csv")
list.files()
setwd("Documents/github")
list.files()
setwd("RepData_PeerAssessment1")
activityTable <- read.csv("activity.csv")
activityWithoutNulls <- activityTable[!is.na(activityTable$steps),]
activityWithoutNullsDF <- tbl_df(activityWithoutNulls)
View(activityWithoutNullsDF)
activityWithoutNullsDF <- as_tibble(activityWithoutNulls)
days <- group_by(activityWithoutNullsDF, date)
View(days)
summarise(days, totalSteps = sum(steps))
stepsByDaySummary <- summarise(days, totalSteps = sum(steps))
View(stepsByDaySummary)
stepsByDaySummary <- summarise(activityWithoutNulls, totalSteps = sum(steps))
stepsByDaySummary <- summarise(activityWithoutNullsDF, totalSteps = sum(steps))
days <- group_by(activityWithoutNullsDF, date)
stepsByDaySummary <- summarise(days, totalSteps = sum(steps))
hist(stepsByDaySummary)
hist(stepsByDaySummary$totalSteps)
stepsByDaySummary <- summarise(days, steps = sum(steps))
hist(stepsByDaySummary$steps)
meanStepsTaken <- round(mean(stepsByDaySummary$steps),1)
hist(stepsByDaySummary$steps,main="Steps Per Day",xlab="Number of Steps",col="blue")
meanStepsTaken <- mean(stepsByDaySummary$steps)
meanStepsTaken <- round(mean(stepsByDaySummary$steps),1)
meanStepsTaken <- to_string(round(mean(stepsByDaySummary$steps),1))
meanStepsTaken <- as.character(round(mean(stepsByDaySummary$steps),1))
intervals <- group_by(activityWithoutNullsDF, interval)
intervalSummary <- summarise(intervals, steps = sum(steps))
View(intervalSummary)
intervalSummary <- summarise(intervals, steps = sum(steps), numOfDays = n_distinct(date))
View(intervalSummary)
intervalSummary$avgSteps <- intervalSummary$steps / intervalSummary$numOfDays
View(intervalSummary)
plot(intervalSummary$interval, intervalSummary$avgSteps, type="l")
plot(intervalSummary$interval, intervalSummary$avgSteps, type="l", xlab="Interval", ylab="Avg. Number of Steps")
plot(intervalSummary$interval, intervalSummary$avgSteps, type="l", xlab="Interval", ylab="Avg. Number of Steps", main="Average Number of Steps Per Interval")
intervalSummary <- summarise(intervals, steps = sum(steps), numOfDays = n_distinct(date), avg(steps))
intervalSummary <- summarise(intervals, steps = sum(steps), numOfDays = n_distinct(date), average(steps))
max(intervalSummary$avgSteps)
highestAvgInterval <- max(intervalSummary$avgSteps)
intervalSummary[intervalSummary$avgSteps == highestAvgInterval,]
intervalSummary[intervalSummary$avgSteps == highestAvgInterval,]$interval
intervalSummary[intervalSummary$avgSteps == max(intervalSummary$avgSteps),]$interval
invervalWithMaxStepsOnAverage <- intervalSummary[intervalSummary$avgSteps == max(intervalSummary$avgSteps),]$interval
activityTableDF <- as_tibble(activityTable)
is.na(activityTableDF$steps)
is.na(activityTableDF$steps)==TRUE
is.na(activityTableDF$steps)=TRUE
activityTable[is.na(activityTableDF$steps),]
activityTable[is.na(activityTableDF$steps)==TRUE,]
sum(is.na(activityTable$steps))
numberOfRecordsWithNoData <- sum(is.na(activityTable$steps))
intervalSummary$interval == 0
intervalSummary[intervalSummary$interval == 0,]
activityTableDF[is.na(activityTableDF$steps),]
activityTableDF$stepsMissingFilled <- activityTableDF$steps
activityTableDF[is.na(activityTableDF$steps),]
View(intervals)
joinedDF <- left_join(activityTableDF, intervalSummary, by = "interval")
View(joinedDF)
activityTableDF <- as_tibble(activityTable)
joinedDF <- left_join(activityTableDF, intervalSummary, by = "interval")
activityTableWithIntervalAvgsDF <- left_join(activityTableDF, intervalSummary, by = "interval")
activityTableWithIntervalAvgsDF$stepsNullsSubstituted <- if (is.na(activityTableWithIntervalAvgsDF$steps.x)) {activityTableWithIntervalAvgsDF$avgSteps} else {activityTableWithIntervalAvgsDF$steps.x}
View(activityTableWithIntervalAvgsDF)
index <- is.na(activityTableWithIntervalAvgsDF$steps.x)
activityTableWithIntervalAvgsDF$stepsNullsSubstituted <- activityTableWithIntervalAvgsDF$steps.x
index <- is.na(activityTableWithIntervalAvgsDF$stepsNullsSubstituted)
activityTableWithIntervalAvgsDF$stepsNullsSubstituted[index] <- activityTableWithIntervalAvgsDF$avgSteps
activityTableDF <- as_tibble(activityTable)
activityTableWithIntervalAvgsDF <- left_join(activityTableDF, intervalSummary, by = "interval")
activityTableWithIntervalAvgsDF$stepsNullsSubstituted <- activityTableWithIntervalAvgsDF$steps.x
View(activityTableWithIntervalAvgsDF)
index <- is.na(activityTableWithIntervalAvgsDF$stepsNullsSubstituted)
activityTableWithIntervalAvgsDF$stepsNullsSubstituted[index] <- activityTableWithIntervalAvgsDF$avgSteps
View(activityTableWithIntervalAvgsDF)
View(activityTable)
select(activityTableWithIntervalAvgsDF, stepsNullSubstituted, date, interval)
select(activityTableWithIntervalAvgsDF, date, interval)
select(activityTableWithIntervalAvgsDF, stepsNullsSubstituted, date, interval)
select(activityTableWithIntervalAvgsDF, steps <- stepsNullsSubstituted, date, interval)
select(activityTableWithIntervalAvgsDF, stepsNullsSubstituted as steps, date, interval)
newActivityTable <- select(activityTableWithIntervalAvgsDF, stepsNullsSubstituted, date, interval)
rename(newActivityTable, c("stepsNullSubstitued"="steps"))
names(newActivityTable)
names(newActivityTable)[names(newActivityTable)=="stepsNullSubstituted"] <- "steps"
newActivityTable -> as_tibble(newActivityTable)
newActivityTableDF -> as_tibble(newActivityTable)
newActivityTableDF <- as_tibble(newActivityTable)
newActivityTable <- select(activityTableWithIntervalAvgsDF, stepsNullsSubstituted, date, interval)
View(newActivityTable)
names(newActivityTable)[names(newActivityTable)=="stepsNullSubstituted"] <- "steps"
newDays <- group_by(newActivityTableDF, date)
newStepsByDaySummary <- summarise(newDays, steps = sum(steps))
summary(newDays, sum(steps))
newDays
newActivityTable <- select(activityTableWithIntervalAvgsDF, stepsNullsSubstituted, date, interval)
View(newActivityTable)
View(newActivityTableDF)
View(newActivityTable)
names(newActivityTable)[names(newActivityTable)=="stepsNullSubstituted"] <- "steps"
View(newActivityTable)
rename(newActivityTableDF, c("stepsNullSubstituted"="steps"))
rename(newActivityTableDF, c("steps"=stepsNullSubstituted"))
)
newActivityTableDF <- newActivityTableDF %>% rename(stepsNullSubstituted = steps)
View(newActivityTableDF)
View(newActivityTable)
newDays <- group_by(newActivityTableDF, date)
summarise(newDays, steps = sum(stepsNullSubstituted))
newDays
summarise(newDays, steps=sum(stepsNullsSubstituted))
?weekdays
newActivityTableDF$dayType <- weekday(newActivityTableDF$date)
newActivityTableDF$dayType <- weekdays(newActivityTableDF$date)
newActivityTableDF$dayType <- weekdays(as.Date(newActivityTableDF$date))
View(newActivityTableDF)
newActivityTableDF$dayOfWeek <- weekdays(as.Date(newActivityTableDF$date))
newActivityTableDF$weekDay <- weekdays(as.Date(newActivityTableDF$date))
newActivityTableDF$dayType <- if newActivityTableDF$weekDay == "Saturday" { "Weekend"} else "Weekday"
newActivityTableDF$dayType <- if (newActivityTableDF$weekDay == "Saturday") { "Weekend"} else { "Weekday" }
View(newActivityTableDF)
newActivityTableDF$dayType <- if (newActivityTableDF$weekDay == "Saturday" || newActivityTableDF$weekDay == "Saturday") { "Weekend"} else { "Weekday" }
newActivityTableDF[newActivityTableDF$dayOfWeek=="Sunday",]
newActivityTableDF$dayType <- "Weekday"
weekendIndex <- newActivityTableDF$dayOfWeek == "Saturday" | newActivityTableDF$dayOfWeek == "Sunday"
newActivityTableDF$dayType[weekendIndex] <- "Weekend"
View(newActivityTableDF)
newActivityTableDF[newActivityTableDF$dayOfWeek=="Sunday",]
newActivityTableDF[newActivityTableDF$dayType="Weekend",]
newActivityTableDF[newActivityTableDF$dayType="Weekend",]
newActivityTableDF[newActivityTableDF$dayType=="Weekend",]
weekendIntervals <- group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervalsSummary <- summarise(group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval), steps=sum(stepsNullSubstitutued), numOfDays = n_distinct(date))
weekendIntervalsSummary <- summarise(group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervalsGroup <- group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervals <- group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervalGroup <- group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervalGroup <- group_by(newActivityTableDF[newActivityTableDF$dayType=="Weekend",], interval)
weekendIntervalSummary <- summarise(weekendIntervalGroup, numOfDays = n_distinct(date))
weekendIntervalSummary <- summarise(weekendIntervalGroup, steps = sum(stepsNullSubstituted), numOfDays = n_distinct(date))
View(weekendIntervals)
View(weekendIntervals)
View(weekendIntervalSummary)
View(weekendIntervalSummary)
View(weekendIntervalsGroup)
View(weekendIntervalsGroup)
weekendIntervalSummary <- summarise(weekendIntervalGroup, steps = sum(stepsNullsSubstituted), numOfDays = n_distinct(date))
dd = data.frame(School_ID = c("A", "B", "C", "A", "B"),
Year = c(1998, 1998, 1999, 2000, 2005),
Value = c(5, 10, 15, 7, 15))
plot(dd$Year[dd$School_ID=="A"], dd$Value[dd$School_ID=="A"], type="b",
xlim=range(dd$Year), ylim=range(dd$Value))
lines(dd$Year[dd$School_ID=="B"], dd$Value[dd$School_ID=="B"], col=2, type="b")
lines(dd$Year[dd$School_ID=="C"], dd$Value[dd$School_ID=="C"], col=3, type="b")
